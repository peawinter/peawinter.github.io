<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Apprantice</title>
    <description>Hi, I&#39;m an operational researcher and statistician.
</description>
    <link>/</link>
    <atom:link href="/zfeed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 08 Dec 2015 14:37:50 -0500</pubDate>
    <lastBuildDate>Tue, 08 Dec 2015 14:37:50 -0500</lastBuildDate>
    <generator>Jekyll v2.4.0</generator>
    
      <item>
        <title>Access remote ipython notebook</title>
        <description>&lt;p&gt;Ipython notebook provides a interactive and intuitive way to manipulate with data. As I am thinking to playing with larger size data, my hands are tied due to the limitation of my laptop. Then I realize I’‘ve had the access to the Purdue server &lt;code&gt;Hathi&lt;/code&gt;, which is mainly for Hadoop job. More excitingly, it contains all packages from Python (including anaconda distribution), MPICH2, and R. (I found this when I am trying to install the &lt;code&gt;Rmpi&lt;/code&gt; package.) The inspiration to use ipython hosted by Hathi hits me immediately.&lt;/p&gt;

&lt;p&gt;The steps are straightforward,&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Make sure your can login without password. This can be done by following &lt;a href=&quot;http://www.linuxproblem.org/art_9.html&quot;&gt;reference 2&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Start ipython on Hathi.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;code&gt;bash
% on server
module add anaconda
ipython notebook --no-browser --port=7777
&lt;/code&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Setup the ssh tunnel from the local machine to the remote machine.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;code&gt;bash
% on local machine
ssh -L 7777:localhost:7777 user@hathi.rcac.purdue.edu
&lt;/code&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Access remotely hosted ipython notebook through your favorite brower at &lt;a href=&quot;localhost:7777&quot;&gt;localhost:7777&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;As Joe Hamman said,&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;the beauty of this is that I interact only with the browser on my local machine, while having access to the computing power and file system of the remote machine.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;reference&quot;&gt;Reference&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.hydro.washington.edu/~jhamman/hydro-logic/blog/2013/10/04/pybook-remote/&quot;&gt;http://www.hydro.washington.edu/~jhamman/hydro-logic/blog/2013/10/04/pybook-remote/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.linuxproblem.org/art_9.html&quot;&gt;http://www.linuxproblem.org/art_9.html&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Thu, 25 Jun 2015 00:00:00 -0400</pubDate>
        <link>/tips/2015/06/25/ipython-notebook-from-hathi/</link>
        <guid isPermaLink="true">/tips/2015/06/25/ipython-notebook-from-hathi/</guid>
        
        <category>python</category>
        
        <category>notebook</category>
        
        
        <category>tips</category>
        
      </item>
    
      <item>
        <title>Install Rmpi on Mac and Redhat server</title>
        <description>&lt;p&gt;To me, learning something new always starts from stucking in some troubles. This time is the compiling error issued when I installed &lt;code&gt;Rmpi&lt;/code&gt; for the first time.&lt;/p&gt;

&lt;h2 id=&quot;installation&quot;&gt;Installation&lt;/h2&gt;

&lt;p&gt;It turns out &lt;code&gt;Rmpi&lt;/code&gt; depends on &lt;code&gt;open MPI&lt;/code&gt;, which should be installed by&lt;/p&gt;

&lt;p&gt;&lt;code&gt;bash
$ brew install open-mpi
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Then in &lt;code&gt;R&lt;/code&gt;, install the package from source.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;r
install.packages(&quot;Rmpi&quot;, type=&quot;source&quot;)
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;As to install &lt;code&gt;Rmpi&lt;/code&gt; on server, we need some specification. This line works on &lt;code&gt;radon&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;bash
R CMD INSTALL Rmpi_0.6-5.tar.gz --configure-args=--with-mpi=/apps/rhel6/openmpi/1.6.3/intel-13.1.1.163
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Although this line can do the job, but it is not straight forward to get here.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Download Rmpi_version.gz&lt;/li&gt;
  &lt;li&gt;Add module&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;code&gt;bash
module add r
module add openmpi
&lt;/code&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Check the directory of the openmpi via&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;code&gt;bash
ompi_info
&lt;/code&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Final step to install &lt;code&gt;Rmpi&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;code&gt;bash
R CMD INSTALL Rmpi_0.6-5.tar.gz --configure-args=--with-mpi=/apps/rhel6/openmpi/1.6.3/intel-13.1.1.163
&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;examples&quot;&gt;Examples&lt;/h2&gt;
</description>
        <pubDate>Tue, 23 Jun 2015 00:00:00 -0400</pubDate>
        <link>/tips/2015/06/23/install-Rmpi/</link>
        <guid isPermaLink="true">/tips/2015/06/23/install-Rmpi/</guid>
        
        <category>R</category>
        
        <category>parallel computing</category>
        
        
        <category>tips</category>
        
      </item>
    
      <item>
        <title>Python punctuation</title>
        <description>&lt;p&gt;Here is a regex to match a string of characters that are not a letters or numbers:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;python
[^A-Za-z0-9]+
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Here is the Python command to do a regex substitution:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;python
re.sub(&#39;[^A-Za-z0-9]+&#39;, &#39;&#39;, mystring)
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;```python
s = “hello world! how are you? 0”&lt;/p&gt;

&lt;h1 id=&quot;short-version&quot;&gt;Short version&lt;/h1&gt;
&lt;p&gt;print filter(lambda c: c.isalpha(), s)&lt;/p&gt;

&lt;h1 id=&quot;faster-version-for-long-ascii-strings&quot;&gt;Faster version for long ASCII strings:&lt;/h1&gt;
&lt;p&gt;id_tab = ““.join(map(chr, xrange(256)))
tostrip = ““.join(c for c in id_tab if c.isalpha())
print s.translate(id_tab, tostrip)&lt;/p&gt;

&lt;h1 id=&quot;using-regular-expressions&quot;&gt;Using regular expressions&lt;/h1&gt;
&lt;p&gt;print re.sub(“[^A-Za-z]”, “”, s)
```&lt;/p&gt;

&lt;p&gt;Reference&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/5843518/remove-all-special-characters-punctuation-and-spaces-from-string&quot;&gt;http://stackoverflow.com/questions/5843518/remove-all-special-characters-punctuation-and-spaces-from-string&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Thu, 11 Jun 2015 00:00:00 -0400</pubDate>
        <link>/tips/2015/06/11/python-punctuation/</link>
        <guid isPermaLink="true">/tips/2015/06/11/python-punctuation/</guid>
        
        <category>Python</category>
        
        <category>re</category>
        
        <category>Snippet</category>
        
        
        <category>tips</category>
        
      </item>
    
      <item>
        <title>R download file from web</title>
        <description>&lt;p&gt;When I need to import data that are not on my computer, unless I will use the same data more than twice, I would rather not to save the file on my disk and use R function to download.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;R
&amp;gt; load(url(&quot;http://www.psychology.mcmaster.ca/bennett/psy710/datasets/mood_data.Rdata&quot;))
&amp;gt; ls()
[1] &quot;mood.data&quot;
&amp;gt; head(mood.data)
     group mood
1 pleasant    6
2 pleasant    5
3 pleasant    4
4 pleasant    7
5 pleasant    7
6 pleasant    5
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Another useful package is &lt;code&gt;RCurl&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;R
&amp;gt; library(RCurl)
&amp;gt; myURL &amp;lt;- &#39;some_url&#39;
&amp;gt; myData &amp;lt;- getURLContent(URLencode(myURL))
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;getURL&lt;/code&gt; may issue an error when the file is not text. &lt;code&gt;getURLContent&lt;/code&gt; will determine the type of the content automatically.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;URLencode&lt;/code&gt; is to encode the link. In this case, it is unnecessary, but for link contains quotes, we have to use ‘URLencode’ to process the link at first.&lt;/p&gt;

&lt;p&gt;Reference&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/26108575/loading-rdata-files-from-url&quot;&gt;http://stackoverflow.com/questions/26108575/loading-rdata-files-from-url&lt;/a&gt;
2.
&lt;a href=&quot;http://www.omegahat.org/RCurl/installed/RCurl/html/getURL.html&quot;&gt;http://www.omegahat.org/RCurl/installed/RCurl/html/getURL.html&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Wed, 10 Jun 2015 00:00:00 -0400</pubDate>
        <link>/tips/2015/06/10/r-download-using-curl/</link>
        <guid isPermaLink="true">/tips/2015/06/10/r-download-using-curl/</guid>
        
        <category>R</category>
        
        <category>Download</category>
        
        <category>Snippet</category>
        
        
        <category>tips</category>
        
      </item>
    
      <item>
        <title>Running R on cluster</title>
        <description>&lt;p&gt;I’ve now started a new research on high dimension black box optimization. That means much larger computations and a need to program in a much more smart and layback manner. My old Mac just cannot take this job alone. Luckily, I have the ‘Radon’ and several other clusters to save my ass. Play R on my Mac is easy. But it is another thing on cluster.&lt;/p&gt;

&lt;p&gt;I mainly follow the &lt;a href=&quot;http://www.stat.purdue.edu/~dgc/cluster.pdf&quot;&gt;instruction&lt;/a&gt; by Doug.&lt;/p&gt;

&lt;h2 id=&quot;load-r&quot;&gt;Load R&lt;/h2&gt;

&lt;p&gt;Radon doesn’t come up with R for granted. To load R, we need to type &lt;code&gt;model load r&lt;/code&gt;. The &lt;code&gt;module&lt;/code&gt; command is used to “load” software
packages for use by the current login session.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;lineno&quot;&gt; 1&lt;/span&gt; -bash-4.1&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;R --version
&lt;span class=&quot;lineno&quot;&gt; 2&lt;/span&gt; -bash: r: &lt;span class=&quot;nb&quot;&gt;command &lt;/span&gt;not found
&lt;span class=&quot;lineno&quot;&gt; 3&lt;/span&gt; -bash-4.1&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;module load r
&lt;span class=&quot;lineno&quot;&gt; 4&lt;/span&gt; -bash-4.1&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;R --version
&lt;span class=&quot;lineno&quot;&gt; 5&lt;/span&gt; R version 3.1.0 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;2014-04-10&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; -- &lt;span class=&quot;s2&quot;&gt;&amp;quot;Spring Dance&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 6&lt;/span&gt; Copyright &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;C&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2014&lt;/span&gt; The R Foundation &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; Statistical Computing
&lt;span class=&quot;lineno&quot;&gt; 7&lt;/span&gt; Platform: x86_64-unknown-linux-gnu &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;64-bit&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 8&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt; 9&lt;/span&gt; R is free software and comes with ABSOLUTELY NO WARRANTY.
&lt;span class=&quot;lineno&quot;&gt;10&lt;/span&gt; You are welcome to redistribute it under the terms of the
&lt;span class=&quot;lineno&quot;&gt;11&lt;/span&gt; GNU General Public License versions &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt; or 3.
&lt;span class=&quot;lineno&quot;&gt;12&lt;/span&gt; For more information about these matters see
&lt;span class=&quot;lineno&quot;&gt;13&lt;/span&gt; http://www.gnu.org/licenses/.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Still, I want to run R script in background (leave it running even if logoff). One way is to run the R script in a screen session. Another way is to use the batch mode. The former one is no different from running the code on my Laptop. The later one needs some care.&lt;/p&gt;

&lt;h2 id=&quot;batch-mode&quot;&gt;BATCH mode&lt;/h2&gt;

&lt;p&gt;R script vs R batch&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;code&gt;R CMD BATCH&lt;/code&gt; (see &lt;code&gt;help(BATCH)&lt;/code&gt;) has default options &lt;code&gt;--restore --save --no-readline&lt;/code&gt;, while &lt;code&gt;Rscript&lt;/code&gt; (see &lt;code&gt;help(Rscript)&lt;/code&gt;) has &lt;code&gt;--slave --no-restore&lt;/code&gt;. Furthermore, the output of &lt;code&gt;R CMD BATCH&lt;/code&gt; always goes to a file, taken from the command line if given, or else built from the input filename by appending “out”, whereas the output of &lt;code&gt;Rscript&lt;/code&gt; goes to stdout. Finally, &lt;code&gt;Rscript&lt;/code&gt; accepts user level command-line arguments, after the script name “as usual” (&lt;code&gt;Rscript foo.R 1 2&lt;/code&gt;), whereas CMD BATCH accepts them at the end of the options but before the script name, and prefaced by &lt;code&gt;--args&lt;/code&gt; (&lt;code&gt;R CMD BATCH &quot;--args 1 2&quot; foo.R&lt;/code&gt;). In either case, such arguments are available in the R program as the character vector commandArgs(trailingOnly = TRUE). &lt;a href=&quot;http://biostat.jhsph.edu/~hjaffee/R_tasks.html&quot;&gt;link&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Like said, &lt;code&gt;Rscript&lt;/code&gt; executes quietly in the background and generates output to ‘stdout’.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;lineno&quot;&gt;1&lt;/span&gt; R CMD BATCH t.R &amp;gt; t.out
&lt;span class=&quot;lineno&quot;&gt;2&lt;/span&gt; Rscript t.R &amp;gt; t.out &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# run in background&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;3&lt;/span&gt; nohup Rscript t.R &amp;gt; t.out &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# run in background, even if logout&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Although we can launch several jobs simultaneously (by concatenating with ‘&amp;amp;’), but invoking manually doesn’t scale well. To run tasks seriesly, we can create a file like “run.sh” that contains several ‘Rscript’ invocations. It will run the jobs one at a time.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ruby
# run.sh
Rscript t.R &amp;gt; tout.001
Rscript t.R &amp;gt; tout.002
Rscript t.R &amp;gt; tout.003
Rscript t.R &amp;gt; tout.004
Rscript t.R &amp;gt; tout.005
Rscript t.R &amp;gt; tout.006
Rscript t.R &amp;gt; tout.007
Rscript t.R &amp;gt; tout.008
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;A life-saving tips for creating the “run.sh” script using R&lt;/p&gt;

&lt;p&gt;&lt;code&gt;r
&amp;gt; sprintf(&quot;Rscript t.R &amp;gt; tout.%03d&quot;, 1:8)
[1] &quot;Rscript t.R &amp;gt; tout.001&quot; &quot;Rscript t.R &amp;gt; tout.002&quot; &quot;Rscript t.R &amp;gt; tout.003&quot;
[4] &quot;Rscript t.R &amp;gt; tout.004&quot; &quot;Rscript t.R &amp;gt; tout.005&quot; &quot;Rscript t.R &amp;gt; tout.006&quot;
[7] &quot;Rscript t.R &amp;gt; tout.007&quot; &quot;Rscript t.R &amp;gt; tout.008&quot;
&amp;gt; write(sprintf(&quot;Rscript t.R &amp;gt; tout.%03d&quot;, 1:8), &quot;run.sh&quot;)
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Then we can run “run.sh” in command line.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;lineno&quot;&gt;1&lt;/span&gt; -bash-4.1&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sh run.sh &lt;span class=&quot;c&quot;&gt;# run every job in run.sh one at a time&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;2&lt;/span&gt; -bash-4.1&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;nohup sh run.sh &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# run every job in run.sh one at a time, and keep running even if logout&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;3&lt;/span&gt; -bash-4.1&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;nohup xargs -d &lt;span class=&quot;s1&quot;&gt;&amp;#39;\n&amp;#39;&lt;/span&gt; -n1 -P4 sh -c &amp;lt; run.sh &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# run every job in run.sh keeping 4 jobs running simultaneously keep running even if logout&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;submit-jobs-through-qsub&quot;&gt;Submit jobs through qsub&lt;/h2&gt;

&lt;p&gt;On a cluster, it is not recommended (allowed) to run big jobs on the front ends. A more proper way is to submit jobs through qsub. The punchline is to submit a job description through &lt;code&gt;qsub&lt;/code&gt;. A typical job description will look like this one.&lt;/p&gt;

&lt;p&gt;```bash
#!/bin/bash&lt;/p&gt;

&lt;h2 id=&quot;give-your-job-a-name&quot;&gt;Give your job a name&lt;/h2&gt;
&lt;p&gt;#PBS -N ovs
## Needed if you want to use environmental variables
#PBS -V&lt;/p&gt;

&lt;h2 id=&quot;specify-running-time-and-memory&quot;&gt;Specify running time and memory&lt;/h2&gt;
&lt;p&gt;#PBS -l walltime=00:15:00,vmem=4GB&lt;/p&gt;

&lt;h2 id=&quot;specify-number-of-nodes-and-cores&quot;&gt;Specify number of nodes and cores&lt;/h2&gt;
&lt;p&gt;#PBS -l nodes=1:ppn=8&lt;/p&gt;

&lt;h2 id=&quot;specify-output-and-error-no-need-to-include-these-two-lines&quot;&gt;Specify output and error (no need to include these two lines)&lt;/h2&gt;
&lt;p&gt;#PBS -o ‘qsub.out’
#PBS -e ‘qsub.err’&lt;/p&gt;

&lt;h1 id=&quot;set-the-temporary-file-location&quot;&gt;set the temporary file location&lt;/h1&gt;
&lt;p&gt;export TMPDIR=$WORKDIR&lt;/p&gt;

&lt;h1 id=&quot;go-to-the-job-submission-directory-you-can-change-this-to-your-project-directory&quot;&gt;go to the job submission directory; you can change this to your project directory&lt;/h1&gt;
&lt;p&gt;cd $PBS_O_WORKDIR&lt;/p&gt;

&lt;h1 id=&quot;load-the-r-module-change-the-version-if-needed&quot;&gt;load the R module; change the version if needed&lt;/h1&gt;
&lt;p&gt;module load r&lt;/p&gt;

&lt;h2 id=&quot;export-the-job-number-this-is-unique-to-a-job-and-can-be-used-to-set-the-seed&quot;&gt;Export the job number. This is unique to a job and can be used to set the seed&lt;/h2&gt;
&lt;p&gt;## and as an identifier for the output file
export job_number=&lt;code&gt;echo $PBS_JOBID | awk -F. &#39;{print $1}&#39;&lt;/code&gt;&lt;/p&gt;

&lt;h1 id=&quot;run-r-in-batch-mode&quot;&gt;run R in batch mode&lt;/h1&gt;
&lt;p&gt;R CMD BATCH foo.R &amp;gt; foo.Rout
```&lt;/p&gt;

&lt;p&gt;Note that &lt;code&gt;#!/bin/bash&lt;/code&gt; should be put in the first line. Also, I use ‘BATCH’ here since it is compatible with the following section ‘pass arguments’. I haven’t tested the otherwise.&lt;/p&gt;

&lt;p&gt;Then the file is ready to submit.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;lineno&quot;&gt;1&lt;/span&gt; -bash-4.1&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;qsub foo.pbs&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Other useful command includes&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;lineno&quot;&gt;1&lt;/span&gt; -bash-4.1&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;qstat        &lt;span class=&quot;c&quot;&gt;# See list of jobs in the queue&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;2&lt;/span&gt; -bash-4.1&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;qstat –u usr &lt;span class=&quot;c&quot;&gt;# See list of jobs in the queue submitted by usr&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;3&lt;/span&gt; -bash-4.1&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;qdel JOBID   &lt;span class=&quot;c&quot;&gt;# delete a previously submitted job from the queue&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Another trick from Doug is to force PBS to schedule a node exclusively to prevent misbehave users messing with the shared memory and node.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;bash
#!/bin/sh -l
#PBS -l nodes=1:ppn=8
#PBS -l walltime=00:30:00
cd $PBS_O_WORKDIR
module add r
Rscript t3.R &amp;gt;out1 &amp;amp;
Rscript t3.R &amp;gt;out2 &amp;amp;
Rscript t3.R &amp;gt;out3 &amp;amp;
Rscript t3.R &amp;gt;out4 &amp;amp;
Rscript t3.R &amp;gt;out5 &amp;amp;
Rscript t3.R &amp;gt;out6 &amp;amp;
Rscript t3.R &amp;gt;out7 &amp;amp;
Rscript t3.R &amp;gt;out8 &amp;amp;
wait
&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;pass-arguments&quot;&gt;Pass arguments&lt;/h2&gt;

&lt;p&gt;Like said, &lt;code&gt;Rscript&lt;/code&gt; takes system arguments. In my numerical study, I need to test my algorithms under different parameter settings. A convenient way to create a script and execute it in terminal. (Learn this trick from &lt;a href=&quot;http://www.stat.purdue.edu/~bhadra/&quot;&gt;Dr. Anindya Bhadra&lt;/a&gt;.)&lt;/p&gt;

&lt;p&gt;```bash
## HOWTO: chmod ugo+rx cluster; ./cluster&lt;/p&gt;

&lt;h2 id=&quot;make-sure-you-are-using-the-bash-shell&quot;&gt;Make sure you are using the bash shell&lt;/h2&gt;
&lt;p&gt;#!/bin/bash&lt;/p&gt;

&lt;h2 id=&quot;grid-of-starting-values-for-parameters&quot;&gt;Grid of starting values for parameters&lt;/h2&gt;
&lt;p&gt;STARTAs=(1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20)
STARTBs=(0 1 4)
STARTLs=(50 100 150)&lt;/p&gt;

&lt;h2 id=&quot;to-be-read-in-inside-of-r-as-environmental-variables&quot;&gt;To be read in inside of R as environmental variables&lt;/h2&gt;
&lt;p&gt;LENA=${#STARTAs[&lt;em&gt;]}
LENB=${#STARTBs[&lt;/em&gt;]}
LENL=${#STARTLs[*]}&lt;/p&gt;

&lt;h2 id=&quot;submit-jobs-via-qsub-with-each-starting-value-of-a-exported-to-the-environment&quot;&gt;Submit jobs via qsub with each starting value of “a” exported to the environment.&lt;/h2&gt;
&lt;p&gt;## Sleep 1 second between submitting two jobs&lt;/p&gt;

&lt;p&gt;for k in &lt;code&gt;seq 1 $LENL&lt;/code&gt;
do
	for i in &lt;code&gt;seq 1 $LENA&lt;/code&gt;
	do
	    for j in &lt;code&gt;seq 1 $LENB&lt;/code&gt;
	    do
	        export STARTA=${STARTAs[&lt;code&gt;expr $i - 1&lt;/code&gt;]}
	        export STARTB=${STARTBs[&lt;code&gt;expr $j - 1&lt;/code&gt;]}
	        export STARTL=${STARTLs[&lt;code&gt;expr $k - 1&lt;/code&gt;]}
	        qsub -V NumExp.pbs
	        sleep 1
	    done
	done
done
```&lt;/p&gt;

&lt;p&gt;Read this &lt;a href=&quot;http://stackoverflow.com/questions/14167178/passing-command-line-arguments-to-r-cmd-batch&quot;&gt;post&lt;/a&gt; for passing argument for Rscript command.&lt;/p&gt;

&lt;h2 id=&quot;download-packages&quot;&gt;Download packages&lt;/h2&gt;

&lt;p&gt;An annoying thing is that R may not import and load packages properly.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;lineno&quot;&gt;1&lt;/span&gt; Calls: install.packages -&amp;gt; grep -&amp;gt; contrib.url
&lt;span class=&quot;lineno&quot;&gt;2&lt;/span&gt; In addition: Warning message:
&lt;span class=&quot;lineno&quot;&gt;3&lt;/span&gt; In library&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;package, lib.loc &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; lib.loc, character.only &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; TRUE, logical.return &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; TRUE,  :
&lt;span class=&quot;lineno&quot;&gt;4&lt;/span&gt;   there is no package called ‘***’
&lt;span class=&quot;lineno&quot;&gt;5&lt;/span&gt; Execution halted&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;A remedy is found on &lt;a href=&quot;http://stackoverflow.com/questions/17705133/package-error-when-running-r-code-on-command-line&quot;&gt;stackoverflow&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;For example, if you want to use RStudio’s package repository, set repos=”http://cran.rstudio.com/” inside the install.packages call.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;code&gt;r
install.packages(&quot;yaml&quot;, repos=&quot;http://cran.rstudio.com/&quot;)
library(&quot;***&quot;)
&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;reference&quot;&gt;Reference&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.stat.purdue.edu/~dgc/cluster.pdf&quot;&gt;http://www.stat.purdue.edu/~dgc/cluster.pdf&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://biostat.jhsph.edu/~hjaffee/R_tasks.html&quot;&gt;http://biostat.jhsph.edu/~hjaffee/R_tasks.html&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://wiki.csiro.au/display/ASC/Run+R+script+as+a+batch+job+on+a+Linux+cluster&quot;&gt;https://wiki.csiro.au/display/ASC/Run+R+script+as+a+batch+job+on+a+Linux+cluster&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/17705133/package-error-when-running-r-code-on-command-line&quot;&gt;http://stackoverflow.com/questions/17705133/package-error-when-running-r-code-on-command-line&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Fri, 05 Jun 2015 00:00:00 -0400</pubDate>
        <link>/tips/2015/06/05/run-r-on-cluster/</link>
        <guid isPermaLink="true">/tips/2015/06/05/run-r-on-cluster/</guid>
        
        <category>R</category>
        
        <category>Linux</category>
        
        <category>PBS</category>
        
        <category>Terminal</category>
        
        <category>cluster</category>
        
        
        <category>tips</category>
        
      </item>
    
      <item>
        <title>R from function to its name</title>
        <description>&lt;p&gt;In my research, I design an algorithm for various testing problems. In the R implementation of the algorithm, I take the function name of testing problems as an argument.&lt;/p&gt;

&lt;p&gt;```R
myTestFun1 &amp;lt;- function() {
  …
}&lt;/p&gt;

&lt;p&gt;myTestFun2 &amp;lt;- function() {
  …
}&lt;/p&gt;

&lt;p&gt;myMain &amp;lt;- function(testFun) {
  …
}
```&lt;/p&gt;

&lt;p&gt;R works greatly since it passes function as variable (so-called functional programming?)&lt;/p&gt;

&lt;p&gt;In &lt;code&gt;myMain&lt;/code&gt; function, I want to generate output looks like&lt;/p&gt;

&lt;p&gt;```
test function: myTestFun1&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    value: .... ```
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Here I got a problem, since R passes the function to &lt;code&gt;testFun&lt;/code&gt;, the names of those testing functions (myTestFun1 and myTestFun2) are not retrievable. To walk around it, instead of passing the function, I pass the name of test function and use &lt;code&gt;match.fun&lt;/code&gt; to extract the desired function object.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;R
myMainNew &amp;lt;- function(testFunName) {
  testFun &amp;lt;- match.fun(testFunName)
}
&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;reference&quot;&gt;Reference&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;http://stat.ethz.ch/R-manual/R-devel/library/base/html/match.fun.html&quot;&gt;http://stat.ethz.ch/R-manual/R-devel/library/base/html/match.fun.html&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Fri, 05 Jun 2015 00:00:00 -0400</pubDate>
        <link>/tips/2015/06/05/from-function-to-name/</link>
        <guid isPermaLink="true">/tips/2015/06/05/from-function-to-name/</guid>
        
        <category>R</category>
        
        <category>function</category>
        
        
        <category>tips</category>
        
      </item>
    
      <item>
        <title>Site-ABC</title>
        <description>&lt;p&gt;All of following are from Lijia’s &lt;a href=&quot;http://yulijia.net/freshman21/&quot;&gt;posts&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;install&quot;&gt;Install&lt;/h2&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;lineno&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# please make sure you have already installed git tools and ruby tools(gem)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;gem install sass
&lt;span class=&quot;lineno&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;gem install jekyll
&lt;span class=&quot;lineno&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git clone https://github.com/yulijia/freshman21.git&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;structure-of-freshman21-theme&quot;&gt;Structure of freshman21 theme&lt;/h2&gt;

&lt;p&gt;You can see the simplest way of adding a page is just to add an HTML ( or markdown ) file in the root directory with a suitable name for the page you want to create. For example, aahome.md is the homepage link, about.md is the about page.&lt;/p&gt;

&lt;p&gt;All sidebar boxes html files are in the &lt;code&gt;_include&lt;/code&gt; directory, their name begin with upper case. You can chose which sidebar boxes appears in the main page on the &lt;q&gt;sidebar.html&lt;/q&gt; in the &lt;code&gt;_includes&lt;/code&gt; directory.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;.
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;-- a_home.md                 &lt;span class=&quot;c&quot;&gt;# home page link at navigation bar&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;-- b_about.md                &lt;span class=&quot;c&quot;&gt;# about link at navigation bar&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;-- c_archives.md             &lt;span class=&quot;c&quot;&gt;# archives link at navigation bar&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;-- _config.yml
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;-- css
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;   &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;-- main.scss
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;-- d_categories.md           &lt;span class=&quot;c&quot;&gt;# categories link at navigation bar&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;-- e_tags.md                 &lt;span class=&quot;c&quot;&gt;# tags at main navigation bar&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;-- feed.xml                  &lt;span class=&quot;c&quot;&gt;# RSS at main navigation bar&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;-- f_guestbook.md            &lt;span class=&quot;c&quot;&gt;# guest book like at navigation bar&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;-- images
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;   &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;-- favicon.ico           &lt;span class=&quot;c&quot;&gt;# here is your website favicon&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;-- _includes
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;   &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;-- Aboutme.html          &lt;span class=&quot;c&quot;&gt;# right column sidebar content&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;   &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;-- Archives.html         &lt;span class=&quot;c&quot;&gt;# right column sidebar content&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;   &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;-- Blogroll.html         &lt;span class=&quot;c&quot;&gt;# right column sidebar content&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;   &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;-- Categories.html       &lt;span class=&quot;c&quot;&gt;# right column sidebar content&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;   &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;-- comments.html         &lt;span class=&quot;c&quot;&gt;# right column sidebar content&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;   &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;-- Copyright_Notice.html &lt;span class=&quot;c&quot;&gt;# right column sidebar content&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;   &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;-- footer.html
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;   &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;-- header.html
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;   &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;-- head.html
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;   &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;-- page_pagination.html
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;   &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;-- post_pagination.html
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;   &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;-- Recent_Posts.html     &lt;span class=&quot;c&quot;&gt;# right column sidebar content&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;   &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;-- sidebar.html          &lt;span class=&quot;c&quot;&gt;# you can set you own sidebar content in here&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;   &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;-- Tags.html             &lt;span class=&quot;c&quot;&gt;# right column sidebar content&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;-- index.html
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;-- _layouts
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;   &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;-- default.html
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;   &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;-- page.html
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;   &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;-- post.html
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;-- LICENSE
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;-- _posts
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;   &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;-- 2013-10-10-milu.md
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;   &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;-- 2014-12-13-simple-post.md
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;   &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;-- 2014-12-18-how-to-install.md
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;   &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;-- 2014-12-19-freshman21-structure.md
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;   &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;-- 2014-12-19-how-to-set-the-config-file.md
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;   &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;-- 2015-03-31-readme.md
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;-- README.md
&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;-- _sass
    &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;-- _base.scss
    &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;-- _layout.scss
    &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;-- _syntax-highlighting-native.scss
    &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;-- _syntax-highlighting.scss&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;configuration&quot;&gt;Configuration&lt;/h2&gt;

&lt;p&gt;The &lt;a href=&quot;https://github.com/yulijia/freshman21/blob/master/_config.yml&quot;&gt;config.yml file&lt;/a&gt; in the Freshman21 theme includes five parts.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;First part&lt;/strong&gt; is the site info.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;l-Scalar-Plain&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;Freshman21&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# blog title&lt;/span&gt;
&lt;span class=&quot;l-Scalar-Plain&quot;&gt;tagline&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;Another Jekyll theme, Freshman twenty-first&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# blog sub-titile&lt;/span&gt;
&lt;span class=&quot;l-Scalar-Plain&quot;&gt;author&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;Lijia YU&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# author name&lt;/span&gt;
&lt;span class=&quot;l-Scalar-Plain&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;yu@lijiayu.net&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# author email&lt;/span&gt;
&lt;span class=&quot;l-Scalar-Plain&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Freshman21&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;is&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Jekyll&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;blog&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;theme.&amp;quot;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# You can edit this line in _config.yml. It will appear in your document head meta and in&lt;/span&gt;
&lt;span class=&quot;l-Scalar-Plain&quot;&gt;your feed.xml site description&lt;/span&gt;
&lt;span class=&quot;l-Scalar-Plain&quot;&gt;keywords&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Jekyll,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;theme,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Freshman21&amp;quot;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# html meta keywords&lt;/span&gt;
&lt;span class=&quot;l-Scalar-Plain&quot;&gt;baseurl&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;/freshman21&amp;quot;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# the subpath of your site, e.g. /blog&lt;/span&gt;
&lt;span class=&quot;l-Scalar-Plain&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;http://yulijia.net/freshman21&amp;quot;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# the base hostname &amp;amp; protocol for your site&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Part 2&lt;/strong&gt;, Personal info and site tools info, twitter, github, aboutme and aboutme_photo only appears on the sidebar aboutme-box, you can &lt;q&gt;Hide&lt;/q&gt; in two ways &lt;sup&gt;&lt;a href=&quot;#[1]&quot;&gt;[1]&lt;/a&gt;&lt;/sup&gt;:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;l-Scalar-Plain&quot;&gt;twitter_username&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#your twitter handle  &lt;/span&gt;
&lt;span class=&quot;l-Scalar-Plain&quot;&gt;github_username&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;#your github account&lt;/span&gt;
&lt;span class=&quot;l-Scalar-Plain&quot;&gt;disqus_shortname&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#disqus shortname&lt;/span&gt;
&lt;span class=&quot;l-Scalar-Plain&quot;&gt;favicon&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;     &lt;span class=&quot;s&quot;&gt;&amp;quot;images/favicon.ico&amp;quot;&lt;/span&gt;
&lt;span class=&quot;l-Scalar-Plain&quot;&gt;aboutme&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;Hi, this is Lijia Yu. I made the Freshman21 theme. Please enjoy it.&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# these are shown on aboutme-box(sidebar).&lt;/span&gt;
&lt;span class=&quot;l-Scalar-Plain&quot;&gt;aboutme_photo&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;https://i.imgur.com/15BT1.jpg&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# your personal photo.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Part3&lt;/strong&gt;, Site setting:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;l-Scalar-Plain&quot;&gt;ShowContactInfo&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;True&amp;quot;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# Personal Info (twitter,github,email) can be seen on aboutme-sidebar, those info only shown where ShowContactInfo == True&lt;/span&gt;
&lt;span class=&quot;l-Scalar-Plain&quot;&gt;default_column&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;two&amp;quot;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# blog style: two columns, if default_column != &amp;quot;two&amp;quot;, you will see a one column blog.&lt;/span&gt;
&lt;span class=&quot;l-Scalar-Plain&quot;&gt;default_locale&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;en&amp;quot;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# blog sidebar language set, only include: English(en) and Chinese (cn)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Part4&lt;/strong&gt;, Blogroll info, only &lt;em&gt;name&lt;/em&gt; tags can shown on the page.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;l-Scalar-Plain&quot;&gt;Blogroll&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;Freshman&lt;/span&gt;
        &lt;span class=&quot;l-Scalar-Plain&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;http://yulijia.net/freshman&lt;/span&gt;
        &lt;span class=&quot;l-Scalar-Plain&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;Another Jekyll blog theme&lt;/span&gt;
      &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;author&amp;#39;s website&lt;/span&gt;
        &lt;span class=&quot;l-Scalar-Plain&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;http://yulijia.net/&lt;/span&gt;
        &lt;span class=&quot;l-Scalar-Plain&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;Lijia Yu&amp;#39;s website&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Part5&lt;/strong&gt;, Build settings&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;l-Scalar-Plain&quot;&gt;markdown&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;kramdown&lt;/span&gt;
&lt;span class=&quot;l-Scalar-Plain&quot;&gt;highlighter&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;pygments&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# highlight&lt;/span&gt;
&lt;span class=&quot;l-Scalar-Plain&quot;&gt;paginate&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;5&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;# how many post can seen in the main page&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;highlight-style&quot;&gt;Highlight style&lt;/h2&gt;

&lt;p&gt;This theme’s default highlighter is pygments.&lt;/p&gt;

&lt;p&gt;To change the highlight style, you should install &lt;strong&gt;pygments&lt;/strong&gt;, and generate the css style which you wanted with code&lt;/p&gt;

&lt;p&gt;&lt;code&gt;pygmentize -S default -f html &amp;gt; freshman/_sass/_syntax-highlighting.scss&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Please make sure, add &lt;code&gt;.highlight {&lt;/code&gt; at the head  and &lt;code&gt;}&lt;/code&gt; at the end of file &lt;q&gt;_syntax-highlighting.scss&lt;/q&gt;.&lt;/p&gt;

&lt;p&gt;See more,&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;http://pygments.org/languages/&quot;&gt;Pygments Supported languages&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/9652490/do-i-need-to-generate-a-css-file-from-pygments-for-my-jekyll-blog-to-enable-col&quot;&gt;Pygments online deme&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Fri, 05 Jun 2015 00:00:00 -0400</pubDate>
        <link>/news/2015/06/05/Site-ABC/</link>
        <guid isPermaLink="true">/news/2015/06/05/Site-ABC/</guid>
        
        
        <category>news</category>
        
      </item>
    
      <item>
        <title>Four Line Motto</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;Learn from Everyone&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Follow No One&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Watch for Patterns (a.k.a. Think)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Work Like Hell&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;http://rodrigobenenson.blogspot.com/2010/07/4-lines-motto.html&quot;&gt;source&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 22 May 2015 00:00:00 -0400</pubDate>
        <link>/life/2015/05/22/four-line-motto/</link>
        <guid isPermaLink="true">/life/2015/05/22/four-line-motto/</guid>
        
        <category>lift</category>
        
        <category>motto</category>
        
        
        <category>life</category>
        
      </item>
    
      <item>
        <title>All I need is you</title>
        <description>&lt;p&gt;&lt;img src=&quot;/images/sweet_penguin.jpg&quot; alt=&quot;1&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 19 May 2015 00:00:00 -0400</pubDate>
        <link>/travel/2015/05/19/template/</link>
        <guid isPermaLink="true">/travel/2015/05/19/template/</guid>
        
        <category>Travel</category>
        
        
        <category>travel</category>
        
      </item>
    
      <item>
        <title>Git Cheat Sheet</title>
        <description>&lt;h3 id=&quot;configure-tooling&quot;&gt;Configure tooling&lt;/h3&gt;

&lt;p&gt;Configure user information for all local repositories&lt;/p&gt;

&lt;p&gt;&lt;code&gt;bash
$ git config --global user.name &quot;[name]&quot;           # Sets the name you want atached to your commit transactions
$ git config --global user.email &quot;[email address]&quot; # Sets the email you want atached to your commit transactions
$ git config --global color.ui auto                # Enables helpful colorization of command line output
&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;create-repositories&quot;&gt;Create repositories&lt;/h3&gt;

&lt;p&gt;Start a new repository or obtain one from an existing URL&lt;/p&gt;

&lt;p&gt;&lt;code&gt;bash
$ git init [project-name] # Creates a new local repository with the specified name
$ git clone [url]         # Downloads a project and its entire version history
&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;make-changes&quot;&gt;Make changes&lt;/h3&gt;

&lt;p&gt;Review edits and craf a commit transaction&lt;/p&gt;

&lt;p&gt;&lt;code&gt;bash
$ git status                            # Lists all new or modified files to be commited
$ git add [file]                        # Snapshots the file in preparation for versioning
$ git reset [file]                      # Unstages the file, but preserve its contents
$ git diff                              # Shows file differences not yet staged
$ git diff --staged                     # Shows file differences between staging and the last file version
$ git commit -m &quot;[descriptive message]&quot; # Records file snapshots permanently in version history
&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;group-changes&quot;&gt;Group changes&lt;/h3&gt;

&lt;p&gt;Name a series of commits and combine completed efforts&lt;/p&gt;

&lt;p&gt;&lt;code&gt;bash
$ git branch                  # Lists all local branches in the current repository
$ git branch [branch-name]    # Creates a new branch
$ git checkout [branch-name]  # Switches to the specified branch and updates the working directory
$ git merge [branch]          # Combines the specified branch’s history into the current branch
$ git branch -d [branch-name] # Deletes the specified branch
&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;refactor-filenames&quot;&gt;Refactor filenames&lt;/h3&gt;

&lt;p&gt;Relocate and remove versioned files&lt;/p&gt;

&lt;p&gt;&lt;code&gt;bash
$ git rm [file]                         # Deletes the file from the working directory and stages the deletion
$ git rm --cached [file]                # Removes the file from version control but preserves the file locally
$ git mv [file-original] [file-renamed] # Changes the file name and prepares it for commit
&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;suppress-tracking&quot;&gt;Suppress tracking&lt;/h3&gt;

&lt;p&gt;Exclude temporary files and paths&lt;/p&gt;

&lt;p&gt;&lt;code&gt;bash
 *.log
 build/
 temp-*
# A text file named .gitignore suppresses accidental versioning of files and paths matching the specified patterns
$ git ls-files --other --ignored --exclude-standard
# Lists all ignored files in this project
&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;save-fragments&quot;&gt;Save fragments&lt;/h3&gt;

&lt;p&gt;Shelve and restore incomplete changes&lt;/p&gt;

&lt;p&gt;&lt;code&gt;bash
$ git stash      # Temporarily stores all modified tracked files
$ git stash pop  # Restores the most recently stashed files
$ git stash list # Lists all stashed changesets
$ git stash drop # Discards the most recently stashed changeset
&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;review-history&quot;&gt;Review history&lt;/h3&gt;

&lt;p&gt;Browse and inspect the evolution of project files&lt;/p&gt;

&lt;p&gt;&lt;code&gt;bash
$ git log                                   # Lists version history for the current branch
$ git log --follow [file]                   # Lists version history for a file, including renames
$ git diff [first-branch]...[second-branch] # Shows content differences between two branches
$ git show [commit]                         # Outputs metadata and content changes of the specified commit
&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;redo-commits&quot;&gt;Redo commits&lt;/h3&gt;

&lt;p&gt;Erase mistakes and craft replacement history&lt;/p&gt;

&lt;p&gt;&lt;code&gt;bash
$ git reset [commit]        # Undoes all commits after [commit], preserving changes locally
$ git reset --hard [commit] # Discards all history and changes back to the specified commit
&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;synchronize-changes&quot;&gt;Synchronize changes&lt;/h3&gt;

&lt;p&gt;Register a repository bookmark and exchange version history&lt;/p&gt;

&lt;p&gt;&lt;code&gt;bash
$ git fetch [bookmark]          # Downloads all history from the repository bookmark
$ git merge [bookmark]/[branch] # Combines bookmark’s branch into current local branch
$ git push [alias] [branch]     # Uploads all local branch commits to GitHub
$ git pull                      # Downloads bookmark history and incorporates changes
&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;reference&quot;&gt;Reference&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://try.github.io/levels/1/challenges/1&quot;&gt;Try Git&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://training.github.com/kit/downloads/github-git-cheat-sheet.pdf&quot;&gt;github-git-cheat-sheet&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Fri, 30 Jan 2015 00:00:00 -0500</pubDate>
        <link>/tips/2015/01/30/Git-Resources/</link>
        <guid isPermaLink="true">/tips/2015/01/30/Git-Resources/</guid>
        
        <category>tips</category>
        
        <category>git</category>
        
        <category>cheatsheet</category>
        
        
        <category>tips</category>
        
      </item>
    
  </channel>
</rss>
